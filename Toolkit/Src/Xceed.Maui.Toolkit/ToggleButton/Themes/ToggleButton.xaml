<?xml version="1.0" encoding="utf-8" ?>
<!--
/***************************************************************************************
 
  Xceed Toolkit for MAUI is a multiplatform toolkit offered by Xceed Software Inc., 
  makers of the popular WPF Toolkit.

  COPYRIGHT (C) 2023 Xceed Software Inc. ALL RIGHTS RESERVED.

  This program is provided to you under the terms of a Xceed Community License 
  For more details about the Xceed Community License please visit the products GitHub or NuGet page .

  DISCLAIMER: This code is provided as-is and without warranty of any kind, express or implied. The 
  author(s) and owner(s) of this code shall not be liable for any damages or losses resulting from 
  the use or inability to use the code. 

 
  *************************************************************************************/
  -->

<ResourceDictionary xmlns="http://schemas.microsoft.com/dotnet/2021/maui"
                    xmlns:x="http://schemas.microsoft.com/winfx/2009/xaml"
                    xmlns:local="http://schemas.xceed.com/maui/xaml/toolkit">

  <ResourceDictionary.MergedDictionaries>
    <ResourceDictionary Source="../../Button/Themes/Button.xaml;assembly=Xceed.Maui.Toolkit" />
    <ResourceDictionary Source="../../Themes/Brushes/Common.xaml;assembly=Xceed.Maui.Toolkit" />
  </ResourceDictionary.MergedDictionaries>

  <Style x:Key="FluentDesignToggleButton"
         TargetType="{x:Type local:ToggleButton}"
         BasedOn="{local:StaticResource {x:Type local:Button}}">
    <Setter Property="BorderThickness"
            Value="1" />
    <Setter Property="BorderBrush"
            Value="{AppThemeBinding Dark={StaticResource DarkControlBorderBrush},Light={StaticResource LightControlBorderBrush}}" />
    <Setter Property="Background"
            Value="{AppThemeBinding Light={StaticResource LightBase0}, Dark={StaticResource DarkBase2}}" />
    <Setter Property="TextColor"
            Value="{AppThemeBinding Light={StaticResource LightTextPrimary}, Dark={StaticResource DarkTextPrimary}}" />
    <Setter Property="Padding"
            Value="8,5,8,6" />
    <Setter Property="CornerRadius"
            Value="4" />
    <Style.Triggers>
      <Trigger Property="OverrideDefaultVisualStates"
               TargetType="{x:Type local:ToggleButton}"
               Value="False">
        <Setter Property="VisualStateManager.VisualStateGroups">
          <VisualStateGroupList>
            <VisualStateGroup>
              <VisualState x:Name="Normal">
                <VisualState.Setters>
                  <Setter Property="Background"
                          Value="{AppThemeBinding Light={StaticResource LightBase0}, Dark={StaticResource DarkBase2}}" />
                  <Setter Property="TextColor"
                          Value="{AppThemeBinding Light={StaticResource LightTextPrimary}, Dark={StaticResource DarkTextPrimary}}" />
                </VisualState.Setters>
              </VisualState>
              <VisualState x:Name="Pressed">
                <VisualState.Setters>
                  <Setter Property="Background"
                          Value="{AppThemeBinding Light={StaticResource LightBase4}, Dark={StaticResource DarkBase4}}" />
                  <Setter Property="TextColor"
                          Value="{AppThemeBinding Light={StaticResource LightTextPrimary}, Dark={StaticResource DarkTextPrimary}}" />
                </VisualState.Setters>
              </VisualState>
              <VisualState x:Name="PointerOver">
                <VisualState.Setters>
                  <Setter Property="Background"
                          Value="{DynamicResource SystemAccentColorDark1}" />
                  <Setter Property="TextColor"
                          Value="{DynamicResource SystemAccentColorDark1Foreground}" />
                </VisualState.Setters>
              </VisualState>
              <VisualState x:Name="Checked">
                <VisualState.Setters>
                  <Setter Property="Background"
                          Value="{DynamicResource SystemAccentColor}" />
                  <Setter Property="TextColor"
                          Value="{DynamicResource SystemAccentColorForeground}" />
                </VisualState.Setters>
              </VisualState>
              <VisualState x:Name="Disabled">
                <VisualState.Setters>
                  <Setter Property="Opacity"
                          Value="0.4" />
                </VisualState.Setters>
              </VisualState>
            </VisualStateGroup>
          </VisualStateGroupList>
        </Setter>
      </Trigger>
    </Style.Triggers>
  </Style>

  <Style TargetType="{x:Type local:ToggleButton}"
         BasedOn="{StaticResource FluentDesignToggleButton}" />
</ResourceDictionary>
