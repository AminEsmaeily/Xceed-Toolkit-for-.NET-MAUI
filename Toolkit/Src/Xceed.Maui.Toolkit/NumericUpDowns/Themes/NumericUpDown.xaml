<?xml version="1.0" encoding="utf-8" ?>
<!--
/***************************************************************************************
 
  Xceed Toolkit for MAUI is a multiplatform toolkit offered by Xceed Software Inc., 
  makers of the popular WPF Toolkit.

  COPYRIGHT (C) 2023 Xceed Software Inc. ALL RIGHTS RESERVED.

  This program is provided to you under the terms of a Xceed Community License 
  For more details about the Xceed Community License please visit the products GitHub or NuGet page .

  DISCLAIMER: This code is provided as-is and without warranty of any kind, express or implied. The 
  author(s) and owner(s) of this code shall not be liable for any damages or losses resulting from 
  the use or inability to use the code. 

 
  *************************************************************************************/
  -->

<ResourceDictionary xmlns="http://schemas.microsoft.com/dotnet/2021/maui"
                    xmlns:x="http://schemas.microsoft.com/winfx/2009/xaml"
                    xmlns:local="clr-namespace:Xceed.Maui.Toolkit;assembly=Xceed.Maui.Toolkit">
  <ResourceDictionary.MergedDictionaries>
    <ResourceDictionary Source="../../Themes/Glyphs.xaml;assembly=Xceed.Maui.Toolkit" />
    <ResourceDictionary Source="../../Themes/Brushes/Common.xaml;assembly=Xceed.Maui.Toolkit" />
  </ResourceDictionary.MergedDictionaries>

  <!-- Targeting Control because NumericUpDown is a templated type and can't be used in XAML.-->
  <Style x:Key="FluentDesignNumericUpDown"
         TargetType="local:InputBase">
    <Setter Property="Background"
            Value="{AppThemeBinding Light={StaticResource LightBase0}, Dark={StaticResource DarkBase2}}" />
    <Setter Property="BorderBrush"
            Value="{AppThemeBinding Dark={StaticResource DarkControlBorderBrush},Light={StaticResource LightControlBorderBrush}}" />
    <Setter Property="TextColor"
            Value="{AppThemeBinding Dark={StaticResource DarkTextPrimary}, Light={StaticResource LightTextPrimary}}" />
    <Setter Property="BorderThickness"
            Value="1" />
    <Setter Property="CornerRadius"
            Value="4" />
    <Setter Property="HorizontalContentOptions"
            Value="Fill" />
    <Setter Property="VerticalContentOptions"
            Value="Fill" />
    <Setter Property="ControlTemplate">
      <Setter.Value>
        <ControlTemplate>
          <local:Border BorderBrush="{TemplateBinding BorderBrush}"
                        CornerRadius="{TemplateBinding CornerRadius}"
                        BorderThickness="{TemplateBinding BorderThickness}"
                        Background="{TemplateBinding Background}"
                        MaximumWidthRequest="{TemplateBinding MaximumWidthRequest}"
                        MaximumHeightRequest="{TemplateBinding MaximumHeightRequest}"
                        MinimumHeightRequest="{TemplateBinding MinimumHeightRequest}"
                        MinimumWidthRequest="{TemplateBinding MinimumWidthRequest}"
                        HorizontalContentOptions="Fill"
                        Padding="0"
                        IsEnabled="{TemplateBinding IsEnabled}">
            <local:ButtonSpinner x:Name="PART_Spinner"
                                 Background="Transparent"
                                 Padding="{TemplateBinding Padding}"
                                 AllowSpin="{TemplateBinding AllowSpin}"
                                 SpinnerLocation="{TemplateBinding SpinnerLocation}"
                                 SpinnerDownContentTemplate="{Binding SpinnerDownContentTemplate, Source={RelativeSource TemplatedParent}, TargetNullValue={StaticResource DecreaseGlyph}}"
                                 SpinnerUpContentTemplate="{Binding SpinnerUpContentTemplate, Source={RelativeSource TemplatedParent}, TargetNullValue={StaticResource IncreaseGlyph}}"
                                 IsEnabled="{TemplateBinding IsEnabled}"
                                 CornerRadius="{TemplateBinding CornerRadius}"
                                 HorizontalContentOptions="{TemplateBinding HorizontalContentOptions}"
                                 VerticalContentOptions="{TemplateBinding VerticalContentOptions}"
                                 OverrideDefaultVisualStates="True">
              <local:TextBox x:Name="PART_TextBox"
                             Background="Transparent"
                             IsFocusUnderlineVisible="False"
                             BorderThickness="0"
                             CornerRadius="{Binding CornerRadius, Source={RelativeSource TemplatedParent}, Converter={StaticResource CornerRadiusToSideCornerRadiusConverter}, ConverterParameter=Left}"
                             HorizontalContentOptions="End"
                             VerticalContentOptions="Center"
                             Padding="0"
                             MinimumWidthRequest="40"
                             Watermark="{TemplateBinding Watermark}"
                             TextColor="{Binding TextColor, Source={RelativeSource TemplatedParent}, Mode=TwoWay}"
                             FontFamily="{Binding FontFamily, Source={RelativeSource TemplatedParent}, Mode=TwoWay}"
                             FontSize="{Binding FontSize, Source={RelativeSource TemplatedParent}, Mode=TwoWay}"
                             FontAttributes="{Binding FontAttributes, Source={RelativeSource TemplatedParent}, Mode=TwoWay}"
                             IsEnabled="{TemplateBinding IsEnabled}">
                <local:TextBox.Triggers>
                  <DataTrigger TargetType="local:TextBox"
                               Binding="{Binding SpinnerLocation, Source={x:Reference PART_Spinner}}"
                               Value="Left">
                    <Setter Property="CornerRadius"
                            Value="{Binding CornerRadius, Source={RelativeSource TemplatedParent}, Converter={StaticResource CornerRadiusToSideCornerRadiusConverter}, ConverterParameter=Right}" />
                  </DataTrigger>
                </local:TextBox.Triggers>                
              </local:TextBox>
            </local:ButtonSpinner>
          </local:Border>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <Style TargetType="local:IntegerUpDown"
         BasedOn="{StaticResource FluentDesignNumericUpDown}" />

  <Style TargetType="local:DoubleUpDown"
         BasedOn="{StaticResource FluentDesignNumericUpDown}" />

  <Style TargetType="local:ByteUpDown"
         BasedOn="{StaticResource FluentDesignNumericUpDown}" />

  <Style TargetType="local:DecimalUpDown"
         BasedOn="{StaticResource FluentDesignNumericUpDown}" />

  <Style TargetType="local:LongUpDown"
         BasedOn="{StaticResource FluentDesignNumericUpDown}" />

  <Style TargetType="local:SByteUpDown"
         BasedOn="{StaticResource FluentDesignNumericUpDown}" />

  <Style TargetType="local:ShortUpDown"
         BasedOn="{StaticResource FluentDesignNumericUpDown}" />

  <Style TargetType="local:SingleUpDown"
         BasedOn="{StaticResource FluentDesignNumericUpDown}" />

  <Style TargetType="local:UIntegerUpDown"
         BasedOn="{StaticResource FluentDesignNumericUpDown}" />

  <Style TargetType="local:ULongUpDown"
         BasedOn="{StaticResource FluentDesignNumericUpDown}" />

  <Style TargetType="local:UShortUpDown"
         BasedOn="{StaticResource FluentDesignNumericUpDown}" />
</ResourceDictionary>
